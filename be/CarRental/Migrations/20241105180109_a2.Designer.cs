// <auto-generated />
using System;
using CarRental.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRental.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241105180109_a2")]
    partial class a2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarRental.Models.CTHD", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Checkin")
                        .HasColumnType("date");

                    b.Property<DateTime>("Checkout")
                        .HasColumnType("date");

                    b.Property<double>("Gia")
                        .HasColumnType("float");

                    b.Property<int>("IDHD")
                        .HasColumnType("int");

                    b.Property<int>("IdSp")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDHD");

                    b.HasIndex("IdSp");

                    b.ToTable("CTHDs");
                });

            modelBuilder.Entity("CarRental.Models.DonDatXe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IdCus")
                        .HasColumnType("int");

                    b.Property<int>("IdOwner")
                        .HasColumnType("int");

                    b.Property<int>("IdSp")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("checkin")
                        .HasColumnType("date");

                    b.Property<DateTime>("checkout")
                        .HasColumnType("date");

                    b.Property<DateTime>("ngayDat")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("IdCus");

                    b.HasIndex("IdOwner");

                    b.HasIndex("IdSp");

                    b.ToTable("DonDatXes");
                });

            modelBuilder.Entity("CarRental.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Danhgia")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCar")
                        .HasColumnType("int");

                    b.Property<int>("IdCus")
                        .HasColumnType("int");

                    b.Property<int?>("InfoUserIdUser")
                        .HasColumnType("int");

                    b.Property<string>("Noidung")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdCar");

                    b.HasIndex("IdCus");

                    b.HasIndex("InfoUserIdUser");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("CarRental.Models.Hang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Hangs");
                });

            modelBuilder.Entity("CarRental.Models.HoaDon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IdCus")
                        .HasColumnType("int");

                    b.Property<int>("IdOwner")
                        .HasColumnType("int");

                    b.Property<DateTime>("Paymentdate")
                        .HasColumnType("date");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("IdOwner");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("CarRental.Models.InfoUser", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPLX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgGplx")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Ngaysinh")
                        .HasColumnType("datetime2");

                    b.HasKey("IdUser");

                    b.ToTable("InfoUsers");
                });

            modelBuilder.Entity("CarRental.Models.InfoXe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bienso")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("IdHang")
                        .HasColumnType("int");

                    b.Property<int>("IdLoaiXe")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LoaiNl")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Mota")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Soghe")
                        .HasColumnType("int");

                    b.Property<int>("Truyendong")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdHang");

                    b.HasIndex("IdLoaiXe");

                    b.HasIndex("IdUser");

                    b.ToTable("InfoXes");
                });

            modelBuilder.Entity("CarRental.Models.Loaixe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HangId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HangId");

                    b.ToTable("Loaixes");
                });

            modelBuilder.Entity("CarRental.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CarRental.Models.SanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Diachixe")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Gia")
                        .HasColumnType("float");

                    b.Property<double>("GiaVuot")
                        .HasColumnType("float");

                    b.Property<int>("GioiHankmgiaoxe")
                        .HasColumnType("int");

                    b.Property<int>("IdChuXe")
                        .HasColumnType("int");

                    b.Property<int>("IdInfo")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("LimitXechay")
                        .HasColumnType("int");

                    b.Property<string>("Loinhan")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdChuXe");

                    b.HasIndex("IdInfo")
                        .IsUnique();

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("CarRental.Models.TinhNang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TinhNangs");
                });

            modelBuilder.Entity("CarRental.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CarRental.Models.XeTinhNang", b =>
                {
                    b.Property<int>("Idtinhnang")
                        .HasColumnType("int");

                    b.Property<int>("Idxe")
                        .HasColumnType("int");

                    b.HasKey("Idtinhnang", "Idxe");

                    b.HasIndex("Idxe");

                    b.ToTable("XeTinhNangs");
                });

            modelBuilder.Entity("CarRental.Models.CTHD", b =>
                {
                    b.HasOne("CarRental.Models.HoaDon", "HoaDoncs")
                        .WithMany("cTHDs")
                        .HasForeignKey("IDHD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Models.SanPham", "SanPham")
                        .WithMany("CTHDs")
                        .HasForeignKey("IdSp")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HoaDoncs");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("CarRental.Models.DonDatXe", b =>
                {
                    b.HasOne("CarRental.Models.InfoUser", "InfoUserCus")
                        .WithMany("DonDatXesCus")
                        .HasForeignKey("IdCus")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CarRental.Models.InfoUser", "infoUserOwner")
                        .WithMany("DonDatXesOwner")
                        .HasForeignKey("IdOwner")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CarRental.Models.SanPham", "SanPham")
                        .WithMany("DonDatXes")
                        .HasForeignKey("IdSp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InfoUserCus");

                    b.Navigation("SanPham");

                    b.Navigation("infoUserOwner");
                });

            modelBuilder.Entity("CarRental.Models.Feedback", b =>
                {
                    b.HasOne("CarRental.Models.SanPham", "SanPham")
                        .WithMany("Feedbacks")
                        .HasForeignKey("IdCar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Models.InfoUser", "InfoUserCus")
                        .WithMany("FeedbacksCus")
                        .HasForeignKey("IdCus")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CarRental.Models.InfoUser", null)
                        .WithMany("FeedbacksOwner")
                        .HasForeignKey("InfoUserIdUser");

                    b.Navigation("InfoUserCus");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("CarRental.Models.HoaDon", b =>
                {
                    b.HasOne("CarRental.Models.InfoUser", "infoUser")
                        .WithMany("HoaDoncs")
                        .HasForeignKey("IdOwner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("infoUser");
                });

            modelBuilder.Entity("CarRental.Models.InfoUser", b =>
                {
                    b.HasOne("CarRental.Models.User", "User")
                        .WithOne("InfoUser")
                        .HasForeignKey("CarRental.Models.InfoUser", "IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRental.Models.InfoXe", b =>
                {
                    b.HasOne("CarRental.Models.Hang", "Hang")
                        .WithMany("InfoXe")
                        .HasForeignKey("IdHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Models.Loaixe", "Loaixe")
                        .WithMany("InfoXe")
                        .HasForeignKey("IdLoaiXe")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CarRental.Models.User", "User")
                        .WithMany("InfoXe")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hang");

                    b.Navigation("Loaixe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRental.Models.Loaixe", b =>
                {
                    b.HasOne("CarRental.Models.Hang", "Hang")
                        .WithMany("Loaixe")
                        .HasForeignKey("HangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hang");
                });

            modelBuilder.Entity("CarRental.Models.SanPham", b =>
                {
                    b.HasOne("CarRental.Models.InfoUser", "InfoUser")
                        .WithMany("sanPhams")
                        .HasForeignKey("IdChuXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Models.InfoXe", "InfoXe")
                        .WithOne("SanPham")
                        .HasForeignKey("CarRental.Models.SanPham", "IdInfo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("InfoUser");

                    b.Navigation("InfoXe");
                });

            modelBuilder.Entity("CarRental.Models.User", b =>
                {
                    b.HasOne("CarRental.Models.Role", "role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });

            modelBuilder.Entity("CarRental.Models.XeTinhNang", b =>
                {
                    b.HasOne("CarRental.Models.TinhNang", "TinhNang")
                        .WithMany("XeTinhNang")
                        .HasForeignKey("Idtinhnang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Models.InfoXe", "InfoXe")
                        .WithMany("ListTinhNang")
                        .HasForeignKey("Idxe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InfoXe");

                    b.Navigation("TinhNang");
                });

            modelBuilder.Entity("CarRental.Models.Hang", b =>
                {
                    b.Navigation("InfoXe");

                    b.Navigation("Loaixe");
                });

            modelBuilder.Entity("CarRental.Models.HoaDon", b =>
                {
                    b.Navigation("cTHDs");
                });

            modelBuilder.Entity("CarRental.Models.InfoUser", b =>
                {
                    b.Navigation("DonDatXesCus");

                    b.Navigation("DonDatXesOwner");

                    b.Navigation("FeedbacksCus");

                    b.Navigation("FeedbacksOwner");

                    b.Navigation("HoaDoncs");

                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("CarRental.Models.InfoXe", b =>
                {
                    b.Navigation("ListTinhNang");

                    b.Navigation("SanPham")
                        .IsRequired();
                });

            modelBuilder.Entity("CarRental.Models.Loaixe", b =>
                {
                    b.Navigation("InfoXe");
                });

            modelBuilder.Entity("CarRental.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CarRental.Models.SanPham", b =>
                {
                    b.Navigation("CTHDs");

                    b.Navigation("DonDatXes");

                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("CarRental.Models.TinhNang", b =>
                {
                    b.Navigation("XeTinhNang");
                });

            modelBuilder.Entity("CarRental.Models.User", b =>
                {
                    b.Navigation("InfoUser");

                    b.Navigation("InfoXe");
                });
#pragma warning restore 612, 618
        }
    }
}
